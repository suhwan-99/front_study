.parent{
  border: 1px solid red;
  height: 500px;
  /* 부모가 flex가 됨 */
  display: flex;

  /* 부모가 자식요소들을 정렬 */
  justify-content: space-evenly;
  /* space-around: 간격을 일정하게 가운데 정렬 */
  /* space-between: 좌우 여백없이 간격 조절 후 가운데 정렬 */
  /* space-evenly: 간격을 균등하게 정렬 */

  /* 세로 정렬 */
  align-items: center;
}

/* flex 박스에 자식으로 있는 요소는 높이를 설정하지 않으면
부모 크기에 맞춰짐 */
.child{
  background-color: aqua;
  width: 100px;
  height: 100px;
  text-align: center;
}

.parent2{
  border: 1px solid red;
  width: 500px;
  height: 500px;
  display: flex;

  justify-content: space-around;
  align-items: center;
}
.child2{
  width: 100px;
  height: 100px;
  background-color: chartreuse;
  text-align: center;
}

.parent3{
  border: 1px solid red;
  height: 500px;
  display: flex;
  /* 자식들 방향 배치: 기본값이 row여서 설정 안해도 가로배치 된거임 */
  /* row-reverse: 가로 + 역방향 배치 */
  /* column: 세로 배치 */
  /* column-reverse: 세로 + 역방향 배치 */
  flex-direction: column-reverse;

  justify-content: space-around;
}
.child3{
  width: 100px;
  height: 100px;
  background-color: bisque;
}

.parent4{
  border: 1px solid red;
  display: flex;
  height: 600px;
  /* 부모 크기에 맞춰서 넣을건지 줄바꿈할건지 결정 */
  /* nowarp: 기본값/ 줄바꿈 안함, 크기 줄어듬 */
  /* warp: 줄바꿈
  wrap-reverse: 역방향 줄바꿈 */
  /* flex-wrap: wrap-reverse; */

  /* 배치 방향과 줄바꿈은 하나의 속성으로 처리 가능 */
  flex-flow: row wrap;
  
  /* wrap일 경우 자식들 간격 설정 가능 */
  align-content: space-between;
}
.parent4 > div{
  width: 100px;
  height: 100px;
  margin: 5px;
  background-color: deeppink;
}